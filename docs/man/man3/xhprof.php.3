.TH "vendor/jetbrains/phpstorm-stubs/xhprof/xhprof.php" 3 "Sat Sep 26 2020" "Safaricom SDP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vendor/jetbrains/phpstorm-stubs/xhprof/xhprof.php
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBxhprof_enable\fP ( $flags=0, array $options=[])"
.br
.ti -1c
.RI "\fBxhprof_disable\fP ()"
.br
.ti -1c
.RI "\fBxhprof_sample_enable\fP ()"
.br
.ti -1c
.RI "\fBxhprof_sample_disable\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const \fBXHPROF_FLAGS_NO_BUILTINS\fP = 1"
.br
.ti -1c
.RI "const \fBXHPROF_FLAGS_CPU\fP = 2"
.br
.ti -1c
.RI "const \fBXHPROF_FLAGS_MEMORY\fP = 4"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "xhprof_disable ()"
(PHP >= 5\&.2\&.0, PECL xhprof >= 0\&.9\&.0)
.br
 Stops the profiler, and returns xhprof data from the run\&.
.PP
\fBarray an array of xhprof data, from the run\&. \fP
.SS "xhprof_enable ( $flags = \fC0\fP, array $options = \fC[]\fP)"
(PHP >= 5\&.2\&.0, PECL xhprof >= 0\&.9\&.0)
.br
 Start xhprof profiling\&.
.PP
\fBint $flags \fPOptional flags to add additional information to the profiling\&. See the a href='https://secure\&.php\&.net/manual/en/xhprof\&.constants\&.php'>XHprof constants for further information about these flags, e\&.g\&., \fBXHPROF_FLAGS_MEMORY\fP to enable memory profiling\&.
.PP
\fBParameters\fP
.RS 4
\fI$options\fP [optional] 
.RE
.PP
An array of optional options, namely, the 'ignored_functions' option to pass in functions to be ignored during profiling\&.
.PP
\fBReturns\fP
.RS 4
null 
.RE
.PP

.SS "xhprof_sample_disable ()"
(PHP >= 5\&.2\&.0, PECL xhprof >= 0\&.9\&.0)
.br
 Stops the sample mode xhprof profiler, and returns xhprof data from the run\&.
.PP
\fBarray an array of xhprof sample data, from the run\&. \fP
.SS "xhprof_sample_enable ()"
(PHP >= 5\&.2\&.0, PECL xhprof >= 0\&.9\&.0)
.br
 Starts profiling in sample mode, which is a lighter weight version of {
.PP
\fBSee also\fP
.RS 4
\fBxhprof_enable()\fP}\&. The sampling interval is 0\&.1 seconds, and samples record the full \fBfunction\fP call stack\&. The main use case is when lower overhead is required when doing performance monitoring and diagnostics\&.
.RE
.PP
\fBnull \fP
.SH "Variable Documentation"
.PP 
.SS "const XHPROF_FLAGS_CPU = 2"
@type int \fBhttps://php\&.net/manual/en/xhprof\&.constants\&.php#constant\&.xhprof-flags-cpu\fP
.SS "const XHPROF_FLAGS_MEMORY = 4"
@type int \fBhttps://php\&.net/manual/en/xhprof\&.constants\&.php##constant\&.xhprof-flags-memory\fP
.SS "const XHPROF_FLAGS_NO_BUILTINS = 1"
@type int \fBhttps://php\&.net/manual/en/xhprof\&.constants\&.php#constant\&.xhprof-flags-no-builtins\fP
.SH "Author"
.PP 
Generated automatically by Doxygen for Safaricom SDP from the source code\&.
