.TH "vendor/jetbrains/phpstorm-stubs/mailparse/mailparse.php" 3 "Sat Sep 26 2020" "Safaricom SDP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vendor/jetbrains/phpstorm-stubs/mailparse/mailparse.php
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBmailparse_determine_best_xfer_encoding\fP ($fp)"
.br
.ti -1c
.RI "\fBmailparse_msg_create\fP ()"
.br
.ti -1c
.RI "\fBmailparse_msg_extract_part_file\fP ($mimemail, $filename, $callbackfunc)"
.br
.ti -1c
.RI "\fBmailparse_msg_extract_part\fP ($mimemail, $msgbody, $callbackfunc)"
.br
.ti -1c
.RI "\fBmailparse_msg_extract_whole_part_file\fP ($mimemail, $filename, $callbackfunc)"
.br
.ti -1c
.RI "\fBmailparse_msg_free\fP ($mimemail)"
.br
.ti -1c
.RI "\fBmailparse_msg_get_part_data\fP ($mimemail)"
.br
.ti -1c
.RI "\fBmailparse_msg_get_part\fP ($mimemail, $mimesection)"
.br
.ti -1c
.RI "\fBmailparse_msg_get_structure\fP ($mimemail)"
.br
.ti -1c
.RI "\fBmailparse_msg_parse_file\fP ($filename)"
.br
.ti -1c
.RI "\fBmailparse_msg_parse\fP ($mimemail, $data)"
.br
.ti -1c
.RI "\fBmailparse_rfc822_parse_addresses\fP ($addresses)"
.br
.ti -1c
.RI "\fBmailparse_stream_encode\fP ($sourcefp, $destfp, $encoding)"
.br
.ti -1c
.RI "\fBmailparse_uudecode_all\fP ($fp)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const \fBMAILPARSE_EXTRACT_OUTPUT\fP 0"
.br
.ti -1c
.RI "const \fBMAILPARSE_EXTRACT_STREAM\fP 1"
.br
.ti -1c
.RI "const \fBMAILPARSE_EXTRACT_RETURN\fP 2"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "mailparse_determine_best_xfer_encoding ( $fp)"
(PECL mailparse >= 0\&.9\&.0) Figures out the best way of encoding the content read from the given file pointer\&. \fBresource $fp \fP \fBA\fP valid file pointer, which must be seek-able\&. 
.PP
\fBReturns\fP
.RS 4
string Returns one of the character encodings supported by the \fBmbstring\fP module\&. 
.RE
.PP

.SS "mailparse_msg_create ()"
(PECL mailparse >= 0\&.9\&.0) Create a MIME mail resource\&. \fBresource Returns a handle that can be used to parse a message\&. \fP
.SS "mailparse_msg_extract_part ( $mimemail,  $msgbody,  $callbackfunc)"
(PECL mailparse >= 0\&.9\&.0) Extracts/decodes a message section \fBresource $mimemail \fP \fBA\fP valid MIME resource\&. 
.PP
\fBParameters\fP
.RS 4
\fI$msgbody\fP 
.br
\fI$callbackfunc\fP [optional] 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "mailparse_msg_extract_part_file ( $mimemail,  $filename,  $callbackfunc)"
(PECL mailparse >= 0\&.9\&.0) Extracts/decodes a message section from the supplied filename\&. The contents of the section will be decoded according to their transfer encoding - base64, quoted-printable and uuencoded text are supported\&. \fBresource $mimemail \fP \fBA\fP valid MIME resource, created with \fBmailparse_msg_create()\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fI$filename\fP 
.RE
.PP
Can be a file name or a valid stream resource\&. 
.PP
\fBParameters\fP
.RS 4
\fI$callbackfunc\fP [optional] 
.RE
.PP
If set, this must be either a valid callback that will be passed the extracted section, or \fBNULL\fP to make this function return the extracted section\&. 
.PP
If not specified, the contents will be sent to 'stdout'\&. 
.PP
\fBReturns\fP
.RS 4
string 
.RE
.PP
If callbackfunc is not \fBNULL\fP returns \fBTRUE\fP on success\&. 
.PP
If callbackfunc is set to \fBNULL\fP, returns the extracted section as a string\&. 
.PP
Returns FALSE on error\&. 
.SS "mailparse_msg_extract_whole_part_file ( $mimemail,  $filename,  $callbackfunc)"
(PECL mailparse >= 0\&.9\&.0) Extracts a message section including headers without decoding the transfer encoding \fBresource $mimemail \fP \fBA\fP valid MIME resource 
.PP
\fBParameters\fP
.RS 4
\fI$filename\fP 
.br
\fI$callbackfunc\fP [optional] 
.RE
.PP
\fBReturns\fP
.RS 4
string 
.RE
.PP

.SS "mailparse_msg_free ( $mimemail)"
(PECL mailparse >= 0\&.9\&.0) Frees a MIME resource\&. \fBresource $mimemail \fP \fBA\fP valid MIME resource allocated by \fBmailparse_msg_create()\fP or \fBmailparse_msg_parse_file()\fP\&. 
.PP
\fBReturns\fP
.RS 4
bool Returns \fBTRUE\fP on success or \fBFALSE\fP on failure\&. 
.RE
.PP

.SS "mailparse_msg_get_part ( $mimemail,  $mimesection)"
(PECL mailparse >= 0\&.9\&.0) Returns a handle on a given section in a mimemessage \fBresource $mimemail \fP \fBA\fP valid MIME resource\&. 
.PP
\fBParameters\fP
.RS 4
\fI$mimesection\fP 
.RE
.PP
\fBReturns\fP
.RS 4
resource 
.RE
.PP

.SS "mailparse_msg_get_part_data ( $mimemail)"
(PECL mailparse >= 0\&.9\&.0) Returns an associative array of info about the message \fBresource $mimemail \fP \fBA\fP valid MIME resource\&. 
.PP
\fBReturns\fP
.RS 4
array 
.RE
.PP

.SS "mailparse_msg_get_structure ( $mimemail)"
(PECL mailparse >= 0\&.9\&.0) Returns an array of mime section names in the supplied message \fBresource $mimemail \fP \fBA\fP valid MIME resource\&. 
.PP
\fBReturns\fP
.RS 4
array 
.RE
.PP

.SS "mailparse_msg_parse ( $mimemail,  $data)"
(PECL mailparse >= 0\&.9\&.0) Incrementally parse data into the supplied mime mail resource\&. This function allow you to stream portions of a file at a time, rather than read and parse the whole thing\&. \fBresource $mimemail \fP \fBA\fP valid MIME resource\&. 
.PP
\fBParameters\fP
.RS 4
\fI$data\fP 
.RE
.PP
\fBReturns\fP
.RS 4
bool Returns \fBTRUE\fP on success or \fBFALSE\fP on failure\&. 
.RE
.PP

.SS "mailparse_msg_parse_file ( $filename)"
(PECL mailparse >= 0\&.9\&.0) Parses a file\&. This is the optimal way of parsing a mail file that you have on disk\&. \fBstring $filename \fP Path to the file holding the message\&. The file is opened and streamed through the parser\&. 
.PP
\fBReturns\fP
.RS 4
resource|false Returns a MIME resource representing the structure, or <bFALSE on error\&. 
.RE
.PP

.SS "mailparse_rfc822_parse_addresses ( $addresses)"
(PECL mailparse >= 0\&.9\&.0) Parses a \fBRFC 822\fP compliant recipient list, such as that found in the To: header\&. \fBstring $addresses \fP \fBA\fP string containing addresses, like in: Wez Furlong wez@example.com, doe@example.com Note: This string must not include the header name\&. 
.PP
\fBReturns\fP
.RS 4
array 
.RE
.PP
Returns an array of associative arrays with the following keys for each recipient: 
.PP
display The recipient name, for display purpose\&. If this part is not set for a recipient, this key will hold the same value as address\&.  address The email address  is_group \fBTRUE\fP if the recipient is a newsgroup, \fBFALSE\fP otherwise\&.  
.SS "mailparse_stream_encode ( $sourcefp,  $destfp,  $encoding)"
(PECL mailparse >= 0\&.9\&.0) Streams data from the source file pointer, apply encoding and write to the destination file pointer\&. \fBresource $sourcefp \fP \fBA\fP valid file handle\&. The file is streamed through the parser\&. 
.PP
\fBParameters\fP
.RS 4
\fI$destfp\fP 
.RE
.PP
The destination file handle in which the encoded data will be written\&. 
.PP
\fBParameters\fP
.RS 4
\fI$encoding\fP 
.RE
.PP
One of the character encodings supported by the \fBmbstring\fP module\&. 
.PP
\fBReturns\fP
.RS 4
bool Returns \fBTRUE\fP on success or \fBFALSE\fP on failure\&. 
.RE
.PP

.SS "mailparse_uudecode_all ( $fp)"
(PECL mailparse >= 0\&.9\&.0) Scans the data from the given file pointer and extract each embedded uuencoded file into a temporary file\&. \fBresource $fp \fP \fBA\fP valid file pointer\&. 
.PP
\fBReturns\fP
.RS 4
array 
.RE
.PP
Returns an array of associative arrays listing filename information\&. 
.PP
filename Path to the temporary file name created  origfilename The original filename, for uuencoded parts only  
.PP
The first filename entry is the message body\&. The next entries are the decoded uuencoded files\&. 
.SH "Variable Documentation"
.PP 
.SS "const MAILPARSE_EXTRACT_OUTPUT 0"

.SS "const MAILPARSE_EXTRACT_RETURN 2"

.SS "const MAILPARSE_EXTRACT_STREAM 1"

.SH "Author"
.PP 
Generated automatically by Doxygen for Safaricom SDP from the source code\&.
