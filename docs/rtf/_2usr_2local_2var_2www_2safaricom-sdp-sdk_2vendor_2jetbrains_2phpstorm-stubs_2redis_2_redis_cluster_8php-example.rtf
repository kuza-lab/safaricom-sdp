{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/usr/local/var/www/safaricom-sdp-sdk/vendor/jetbrains/phpstorm-stubs/redis/RedisCluster.php\par \pard\plain 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a {\b Redis} Cluster client\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{string | null\cell }{{\i $name} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{array\cell }{{\i $seeds} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{float\cell }{{\i $timeout} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{float\cell }{{\i $readTimeout} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{bool\cell }{{\i $persistent} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{string | null\cell }{{\i $auth} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Exceptions\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i {\b RedisClusterException}} \cell }{\cell }
{\row }
}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 
// Declaring a cluster with an array of seeds
$redisCluster = new {\b RedisCluster}(null,['127.0.0.1:6379']);\par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid // Loading a cluster configuration by name
// In order to load a named array, one must first define the seed nodes in redis.ini.
// The following lines would define the cluster 'mycluster', and be loaded automatically by phpredis.\par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid // # In redis.ini
// redis.clusters.seeds = "mycluster[]=localhost:7000&test[]=localhost:7001"
// redis.clusters.timeout = "mycluster=5"
// redis.clusters.read_timeout = "mycluster=10"\par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid //Then, this cluster can be loaded by doing the following\par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid $redisClusterPro = new {\b RedisCluster}('mycluster');
$redisClusterDev = new {\b RedisCluster}('test');
\par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <?php\par
\par
{\cf17 class }RedisCluster \{\par
    {\cf17 const} AFTER = {\cf22 'after'};\par
    {\cf17 const} BEFORE = {\cf22 'before'};\par
\par
    {\cf17 const} OPT_SERIALIZER = 1;\par
    {\cf17 const} OPT_PREFIX = 2;\par
    {\cf17 const} OPT_READ_TIMEOUT = 3;\par
    {\cf17 const} OPT_SCAN = 4;\par
    {\cf17 const} OPT_SLAVE_FAILOVER = 5;\par
\par
    {\cf17 const} FAILOVER_NONE = 0;\par
    {\cf17 const} FAILOVER_ERROR = 1;\par
    {\cf17 const} FAILOVER_DISTRIBUTE = 2;\par
    {\cf17 const} FAILOVER_DISTRIBUTE_SLAVES = 3;\par
\par
    {\cf17 const} SCAN_NORETRY = 0;\par
    {\cf17 const} SCAN_RETRY = 1;\par
\par
    {\cf17 const} SERIALIZER_NONE = 0;\par
    {\cf17 const} SERIALIZER_PHP = 1;\par
    {\cf17 const} SERIALIZER_IGBINARY = 2;\par
    {\cf17 const} SERIALIZER_MSGPACK = 3;\par
    {\cf17 const} SERIALIZER_JSON = 4;\par
\par
    {\cf17 const} ATOMIC = 0;\par
    {\cf17 const} MULTI = 1;\par
    {\cf17 const} PIPELINE = 2;\par
\par
    {\cf17 const} REDIS_NOT_FOUND = 0;\par
    {\cf17 const} REDIS_STRING = 1;\par
    {\cf17 const} REDIS_SET = 2;\par
    {\cf17 const} REDIS_LIST = 3;\par
    {\cf17 const} REDIS_ZSET = 4;\par
    {\cf17 const} REDIS_HASH = 5;\par
\par
    {\cf17 public} {\cf17 function} __construct($name, $seeds, $timeout = {\cf17 null}, $readTimeout = {\cf17 null}, $persistent = {\cf17 false}, $auth = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} close() \{ \}\par
\par
    {\cf17 public} {\cf17 function} {\cf17 get}($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} {\cf17 set}($key, $value, $timeout = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} mget(array $array) \{ \}\par
\par
    {\cf17 public} {\cf17 function} mset(array $array) \{ \}\par
\par
    {\cf17 public} {\cf17 function} msetnx(array $array) \{ \}\par
\par
    {\cf17 public} {\cf17 function} del($key1, ...$otherKeys) \{ \}\par
\par
    {\cf17 public} {\cf17 function} setex($key, $ttl, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} psetex($key, $ttl, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} setnx($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} getSet($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} exists($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} keys($pattern) \{ \}\par
\par
    {\cf17 public} {\cf17 function} type($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lPop($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} rPop($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lSet($key, $index, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sPop($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lPush($key, $value1, $value2 = {\cf17 null}, $valueN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} rPush($key, $value1, $value2 = {\cf17 null}, $valueN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} blPop(array $keys, $timeout) \{ \}\par
\par
    {\cf17 public} {\cf17 function} brPop(array $keys, $timeout) \{ \}\par
\par
    {\cf17 public} {\cf17 function} rPushx($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lPushx($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lInsert($key, $position, $pivot, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lIndex($key, $index) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lRem($key, $value, $count) \{ \}\par
\par
    {\cf17 public} {\cf17 function} brpoplpush($srcKey, $dstKey, $timeout) \{ \}\par
\par
    {\cf17 public} {\cf17 function} rpoplpush($srcKey, $dstKey) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lLen($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sCard($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sMembers($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sIsMember($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sAdd($key, $value1, $value2 = {\cf17 null}, $valueN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sAddArray($key, array $valueArray) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sRem($key, $member1, $member2 = {\cf17 null}, $memberN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sUnion($key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sUnionStore($dstKey, $key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sInter($key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sInterStore($dstKey, $key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sDiff($key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sDiffStore($dstKey, $key1, $key2, $keyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sRandMember($key, $count = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} strlen($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} persist($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} ttl($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pttl($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zCard($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zCount($key, $start, $end) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRemRangeByScore($key, $start, $end) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zScore($key, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zAdd($key, $score1, $value1, $score2 = {\cf17 null}, $value2 = {\cf17 null}, $scoreN = {\cf17 null}, $valueN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zIncrBy($key, $value, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hLen($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hKeys($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hVals($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hGet($key, $hashKey) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hGetAll($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hExists($key, $hashKey) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hIncrBy($key, $hashKey, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hSet($key, $hashKey, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hSetNx($key, $hashKey, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hMGet($key, $hashKeys) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hMSet($key, $hashKeys) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hDel($key, $hashKey1, $hashKey2 = {\cf17 null}, $hashKeyN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hIncrByFloat($key, $field, $increment) \{ \}\par
\par
    {\cf17 public} {\cf17 function} dump($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRank($key, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRevRank($key, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} incr($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} decr($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} incrBy($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} decrBy($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} incrByFloat($key, $increment) \{ \}\par
\par
    {\cf17 public} {\cf17 function} expire($key, $ttl) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pExpire($key, $ttl) \{ \}\par
\par
    {\cf17 public} {\cf17 function} expireAt($key, $timestamp) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pExpireAt($key, $timestamp) \{ \}\par
\par
    {\cf17 public} {\cf17 function} append($key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} getBit($key, $offset) \{ \}\par
\par
    {\cf17 public} {\cf17 function} setBit($key, $offset, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} bitOp($operation, $retKey, $key1, $key2, $key3 = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} bitpos($key, $bit, $start = 0, $end = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} bitCount($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lGet($key, $index) \{ \}\par
\par
    {\cf17 public} {\cf17 function} getRange($key, $start, $end) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lTrim($key, $start, $stop) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lRange($key, $start, $end) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRemRangeByRank($key, $start, $end) \{ \}\par
\par
    {\cf17 public} {\cf17 function} publish($channel, $message) \{ \}\par
\par
    {\cf17 public} {\cf17 function} rename($srcKey, $dstKey) \{ \}\par
\par
    {\cf17 public} {\cf17 function} renameNx($srcKey, $dstKey) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pfCount($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pfAdd($key, array $elements) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pfMerge($destKey, array $sourceKeys) \{ \}\par
\par
    {\cf17 public} {\cf17 function} setRange($key, $offset, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} restore($key, $ttl, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sMove($srcKey, $dstKey, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRange($key, $start, $end, $withscores = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRevRange($key, $start, $end, $withscore = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRangeByScore($key, $start, $end, array $options = array()) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRevRangeByScore($key, $start, $end, array $options = array()) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRangeByLex($key, $min, $max, $offset = {\cf17 null}, $limit = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRevRangeByLex($key, $min, $max, $offset = {\cf17 null}, $limit = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zLexCount($key, $min, $max) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRemRangeByLex($key, $min, $max) \{\par
    \}\par
\par
    {\cf17 public} {\cf17 function} zUnionStore($Output, $ZSetKeys, array $Weights = {\cf17 null}, $aggregateFunction = {\cf22 'SUM'}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zInterStore($Output, $ZSetKeys, array $Weights = {\cf17 null}, $aggregateFunction = {\cf22 'SUM'}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zRem($key, $member1, $member2 = {\cf17 null}, $memberN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sort($key, $option = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} object($string = {\cf22 ''}, $key = {\cf22 ''}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} subscribe($channels, $callback) \{ \}\par
\par
    {\cf17 public} {\cf17 function} psubscribe($patterns, $callback) \{ \}\par
\par
    {\cf17 public} {\cf17 function} unSubscribe($channels, $callback) \{ \}\par
\par
    {\cf17 public} {\cf17 function} punSubscribe($channels, $callback) \{ \}\par
\par
    {\cf17 public} {\cf17 function} evalSha($scriptSha, $args = array(), $numKeys = 0) \{ \}\par
\par
    {\cf17 public} {\cf17 function} scan(&$iterator, $node, $pattern = {\cf17 null}, $count = 0) \{ \}\par
\par
    {\cf17 public} {\cf17 function} sScan($key, &$iterator, $pattern = {\cf17 null}, $count = 0) \{ \}\par
\par
    {\cf17 public} {\cf17 function} zScan($key, &$iterator, $pattern = {\cf17 null}, $count = 0) \{ \}\par
\par
    {\cf17 public} {\cf17 function} hScan($key, &$iterator, $pattern = {\cf17 null}, $count = 0) \{ \}\par
\par
    {\cf17 public} {\cf17 function} getMode() \{ \}\par
\par
    {\cf17 public} {\cf17 function} getLastError() \{ \}\par
\par
    {\cf17 public} {\cf17 function} clearLastError() \{ \}\par
\par
    {\cf17 public} {\cf17 function} getOption($name) \{ \}\par
\par
    {\cf17 public} {\cf17 function} setOption($name, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} _prefix($value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} _serialize($value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} _unserialize($value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} _masters() \{ \}\par
\par
    {\cf17 public} {\cf17 function} multi($mode = RedisCluster::MULTI) \{ \}\par
\par
    {\cf17 public} {\cf17 function} exec() \{ \}\par
\par
    {\cf17 public} {\cf17 function} discard() \{ \}\par
\par
    {\cf17 public} {\cf17 function} watch($key) \{ \}\par
\par
    {\cf17 public} {\cf17 function} unwatch() \{ \}\par
\par
    {\cf17 public} {\cf17 function} save($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} bgsave($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} flushDB($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} flushAll($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} dbSize($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} bgrewriteaof($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} lastSave($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} info($option = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} role($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} randomKey($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} time($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} ping($nodeParams) \{ \}\par
\par
    {\cf17 public} {\cf17 function} echo ($nodeParams, $msg) \{ \}\par
\par
    {\cf17 public} {\cf17 function} command() \{ \}\par
\par
    {\cf17 public} {\cf17 function} rawCommand($nodeParams, $command, $arguments) \{ \}\par
\par
    {\cf17 public} {\cf17 function} cluster($nodeParams, $command, $arguments) \{ \}\par
\par
    {\cf17 public} {\cf17 function} client($nodeParams, $subCmd, $args) \{ \}\par
\par
    {\cf17 public} {\cf17 function} config($nodeParams, $operation, $key, $value) \{ \}\par
\par
    {\cf17 public} {\cf17 function} pubsub($nodeParams, $keyword, $argument) \{ \}\par
\par
    {\cf17 public} {\cf17 function} script($nodeParams, $command, $script) \{ \}\par
\par
    {\cf17 public} {\cf17 function} slowLog($nodeParams, $command, $argument) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geoAdd($key, $longitude, $latitude, $member) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geohash($key, $member1, $member2 = {\cf17 null}, $memberN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geopos($key, $member1, $member2 = {\cf17 null}, $memberN = {\cf17 null}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geoDist($key, $member1, $member2, $unit = {\cf23 'm'}) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geoRadius($key, $longitude, $latitude, $radius, $radiusUnit, array $options) \{ \}\par
\par
    {\cf17 public} {\cf17 function} geoRadiusByMember($key, $member, $radius, $radiusUnit, array $options) \{ \}\par
\par
\}\par
\par
{\cf17 class }RedisClusterException {\cf17 extends} Exception \{\}\par
\par}
 \par
}}